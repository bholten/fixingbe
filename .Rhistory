install.packages("tidyverse")
library(tidyverse)
creatures <- read_csv("data/clean/furrycat/creature.csv")
final_exp <- read_csv("data/clean/furrycat/final_experiment.csv")
View(creatures)
View(final_exp)
combined_data <- inner_join(creatures, final_experiments, by = "final_experiment_id")
combined_data <- inner_join(creatures, final_exp, by = "final_experiment_id")
library(magrittr)
combined_data <- inner_join(creatures, final_exp, by = c("final_experiment_id" = "serial"))
creatures <- read_csv("data/clean/furrycat/creature.csv")
final_exp <- read_csv("data/clean/furrycat/final_experiment.csv")
combined_data <- inner_join(creatures, final_exp, by = c("final_experiment_id" = "serial"))
combined_data <- inner_join(creatures, final_exp, by = c("final_experimentation_id" = "serial"))
View(combined_data)
# Hardiness
health_hardiness_correlation <- cor(combined_data$health, combined_data$hardiness, use = "complete.obs")
print(health_hardiness_correlation)
library(ggplot2)
ggplot(combined_data, aes(x = health, y = hardiness)) +
geom_point() +
geom_smooth(method = lm) +
theme_minimal() +
ggtitle("Scatter plot of Health vs Hardiness")
model <- lm(health ~ hardiness + fortitude, data = combined_data)
summary(model)
model <- lm(health ~ hardiness, data = combined_data)
summary(model)
View(combined_data)
View(final_exp)
library(magrittr)
# Load Data
library(readr)
library(ggplot2)
creatures <- read_csv("data/clean/furrycat/creature.csv")
final_exp <- read_csv("data/clean/furrycat/final_experiment.csv")
combined_data <- inner_join(creatures, final_exp, by = c("final_experimentation_id" = "serial"))
# Hardiness
health_hardiness_correlation <- cor(combined_data$health, combined_data$hardiness, use = "complete.obs")
combined_data <- inner_join(creatures, final_exp, by = c("final_experimentation_id" = "serial"))
View(creatures)
View(final_exp)
combined_data <- inner_join(creatures, final_exp, by = c("final_experimentation_id" = "serial"))
# Load Data
library(dplyr)
library(readr)
library(ggplot2)
creatures <- read_csv("data/clean/furrycat/creature.csv")
final_exp <- read_csv("data/clean/furrycat/final_experiment.csv")
combined_data <- inner_join(creatures, final_exp, by = c("final_experimentation_id" = "serial"))
# Hardiness
health_hardiness_correlation <- cor(combined_data$health, combined_data$hardiness, use = "complete.obs")
print(health_hardiness_correlation)
ggplot(combined_data, aes(x = health, y = hardiness)) +
geom_point() +
geom_smooth(method = lm) +
theme_minimal() +
ggtitle("Scatter plot of Health vs Hardiness")
View(combined_data)
# Endurance - Action
endurance_action_correlation <- cor(combined_data$action, combined_data$endurance, use = "complete.obs")
print(endurance_action_correlation)
# Dexterity - Action
action_dexterity <- cor(combined_data$action, combined_data$action_dexterity, use = "complete.obs")
# Dexterity - Action
action_dexterity <- cor(combined_data$action, combined_data$dexterity, use = "complete.obs")
print(action_dexterity)
ggplot(combined_data, aes(x = health, y = hardiness)) +
geom_point() +
geom_smooth(method = lm) +
theme_minimal() +
ggtitle("Scatter plot of Action vs Dexterity")
# Intellect - Mind
mind_intellect <- cor(combined_data$mind, combined_data$intellect, use = "complete.obs")
print(mind_intellect)
ggplot(combined_data, aes(x = mind, y = intellect)) +
geom_point() +
geom_smooth(method = lm) +
theme_minimal() +
ggtitle("Scatter plot of Mind vs Intellect")
linear_model <- lm(combined_data$mind ~ combined_data$intellect, data = combined_data)
View(linear_model)
residuals <- resid(linear_model)
summary(residuals)
hist(residuals, breaks = 30, main = "Residuals Distribution")
plot(fitted(linear_model), residuals)
abline(h = 0, col = "red")
shapiro.test(residuals)
sd_residuals <- sd(residuals)
library(pls)
pls_result <- plsr(health ~ ., data = combined_data, scale = TRUE, validation = "CV")
pls_result <- plsr(health ~ ., data = df, scale = TRUE, validation = "CV")
pls_result <- plsr(health ~ ., data = combined_data, scale = TRUE, validation = "CV")
predictors <- c("hardiness", "fortitude", "dexterity", "endurance", "intellect", "cleverness", "dependability", "courage", "fierceness", "power")
formula <- as.formula(paste("health ~", paste(predictors, collapse = " + ")))
pls_result <- plsr(formula, data = combined_data, scale = TRUE, validation = "CV")
# Summarize and plot PLSR results
summary(pls_result)
plot(pls_result)
loadings(pls_result)
loadings(pls_result)
autoplot(pls_result, loadings = TRUE, label = TRUE)
library(plsVarSel)
vip <- plsVarSel::vip(pls_result)
library(plsVarSel)
barplot(sort(vip, decreasing = TRUE))
vip <- plsVarSel::vip(pls_result)
loadings(pls_result)
# Running PCA
pca_result <- prcomp(combined_data[, -which(names(combined_data) == "health")], scale. = TRUE)
# Running PCA
pca_result <- prcomp(combined_data[predictors, -which(names(combined_data) == "health")], scale. = TRUE)
# Running PCA
pca_result <- prcomp(combined_data[predictors], scale. = TRUE)
summary(pca_result)
biplot(pca_result)
# CL
predictors <- c("hardiness", "fortitude", "dexterity", "endurance", "intellect", "cleverness", "dependability", "courage", "fierceness", "power")
formula <- as.formula(paste("creature_level ~", paste(predictors, collapse = " + ")))
pls_result <- plsr(formula, data = combined_data, scale = TRUE, validation = "CV")
# Summarize and plot PLSR results
summary(pls_result)
plot(pls_result)
loadings(pls_result)
# CL
predictors <- c("hardiness", "fortitude", "dexterity", "endurance", "intellect", "cleverness", "dependability", "courage", "fierceness", "power",
"kinetic.x", "energy.x", "blast.x", "heat.x", "cold.x", "electricity.x", "stun.x")
formula <- as.formula(paste("creature_level ~", paste(predictors, collapse = " + ")))
pls_result <- plsr(formula, data = combined_data, scale = TRUE, validation = "CV")
# Summarize and plot PLSR results
summary(pls_result)
plot(pls_result)
loadings(pls_result)
# Running PCA
predictors <- c("hardiness", "fortitude", "dexterity", "endurance", "intellect", "cleverness", "dependability", "courage", "fierceness", "power",
"kinetic.x", "energy.x", "blast.x", "heat.x", "cold.x", "electricity.x", "stun.x")
pca_result <- prcomp(combined_data[predictors], scale. = TRUE)
# CL
predictors <- c("hardiness", "fortitude", "dexterity", "endurance", "intellect", "cleverness", "dependability", "courage", "fierceness", "power",
"kinetic.x", "energy.x", "blast.x", "heat.x", "cold.x", "electricity.x", "stun.x")
formula <- as.formula(paste("creature_level ~", paste(predictors, collapse = " + ")))
pls_result <- plsr(formula, data = combined_data, scale = TRUE, validation = "CV")
# Summarize and plot PLSR results
summary(pls_result)
predictors <- c("hardiness", "fortitude", "dexterity", "endurance", "intellect", "cleverness", "dependability", "courage", "fierceness", "power")
formula <- as.formula(paste("health ~", paste(predictors, collapse = " + ")))
pls_result <- plsr(formula, data = combined_data, scale = TRUE, validation = "CV")
# Summarize and plot PLSR results
summary(pls_result)
plot(pls_result)
loadings(pls_result)
model_hardiness <- lm(health ~ hardiness, data = combined_data)
model_fortitude <- lm(health ~ fortitude, data = combined_data)
summary(model_hardiness)
summary(model_fortitude)
model_combined <- lm(health ~ hardiness + fortitude, data = combined_data)
summary(model_combined)
summary(model_hardiness)
summary(model_fortitude)
model_combined <- lm(health ~ hardiness + fortitude, data = combined_data)
summary(model_combined)
summary(model_hardiness)
summary(model_fortitude)
summary(model_hardiness)
summary(model_fortitude)
summary(model_combined)
summary(model_hardiness)
summary(model_combined)
summary(model_hardiness)
summary(model_fortitude)
summary(model_combined)
summary(model_hardiness)
summary(model_fortitude)
model_combined <- lm(health ~ hardiness + fortitude, data = combined_data)
summary(model_combined)
summary(model_hardiness)
summary(model_fortitude)
summary(model_combined)
model_intellect <- lm(health ~ intellect, data = combined_data)
summary(model_intellect)
summary(model_hardiness)
summary(model_fortitude)
summary(model_intellect)
model_combined <- lm(health ~ hardiness + fortitude + intellect, data = combined_data)
summary(model_combined)
model_dexterity <- lm(health ~ dexterity, data = combined_data)
summary(model_dexterity)
model_combined <- lm(health ~ hardiness + fortitude + dexterity + intellect, data = combined_data)
summary(model_combined)
model_combined <- lm(health ~ hardiness + fortitude + dexterity + endurance + intellect, data = combined_data)
summary(model_combined)
model_combined <- lm(health ~ hardiness + fortitude + dexterity + endurance + intellect + cleverness, data = combined_data)
summary(model_combined)
model_combined <- lm(health ~ hardiness + fortitude + dexterity + endurance + intellect + cleverness + dependability, data = combined_data)
summary(model_combined)
model_combined <- lm(health ~ hardiness + fortitude + dexterity + endurance + intellect + cleverness + dependability + courage, data = combined_data)
summary(model_combined)
model_combined <- lm(health ~ hardiness + fortitude + dexterity + endurance + intellect + cleverness + dependability + courage + power, data = combined_data)
summary(model_combined)
model_combined <- lm(health ~ hardiness + fortitude, data = combined_data)
summary(model_combined)
model_combined <- lm(action ~ dexterity + endurance, data = combined_data)
summary(model_combined)
model_combined <- lm(action ~ dexterity, data = combined_data)
summary(model_combined)
model_combined <- lm(action ~ endurance, data = combined_data)
summary(model_combined)
dexterity +
model_combined <- lm(action ~ dexterity + endurance, data = combined_data)
summary(model_combined)
model_combined <- lm(action ~ dexterity + endurance, data = combined_data)
summary(model_combined)
model_combined <- lm(action ~ dexterity, data = combined_data)
summary(model_combined)
model_combined <- lm(mind ~ intellect, data = combined_data)
summary(model_combined)
model_combined <- lm(mind ~ intellect + cleverness, data = combined_data)
summary(model_combined)
model_combined <- lm(health ~ hardiness, data = combined_data)
summary(model_combined)
library(magrittr)
# Load Data
library(dplyr)
library(readr)
library(ggplot2)
creatures <- read_csv("data/clean/furrycat/creature.csv")
final_exp <- read_csv("data/clean/furrycat/final_experiment.csv")
combined_data <- inner_join(creatures, final_exp, by = c("final_experimentation_id" = "serial"))
# Hardiness - Health
health_hardiness_correlation <- cor(combined_data$health, combined_data$hardiness, use = "complete.obs")
print(health_hardiness_correlation)
ggplot(combined_data, aes(x = health, y = hardiness)) +
geom_point() +
geom_smooth(method = lm) +
theme_minimal() +
ggtitle("Scatter plot of Health vs Hardiness")
# Dexterity - Action
action_dexterity <- cor(combined_data$action, combined_data$dexterity, use = "complete.obs")
print(action_dexterity)
ggplot(combined_data, aes(x = action, y = dexterity)) +
geom_point() +
geom_smooth(method = lm) +
theme_minimal() +
ggtitle("Scatter plot of Action vs Dexterity")
# Intellect - Mind
mind_intellect <- cor(combined_data$mind, combined_data$intellect, use = "complete.obs")
print(mind_intellect)
ggplot(combined_data, aes(x = mind, y = intellect)) +
geom_point() +
geom_smooth(method = lm) +
theme_minimal() +
ggtitle("Scatter plot of Mind vs Intellect")
linear_model <- lm(combined_data$mind ~ combined_data$intellect, data = combined_data)
residuals <- resid(linear_model)
summary(residuals)
hist(residuals, breaks = 30, main = "Residuals Distribution")
plot(fitted(linear_model), residuals)
abline(h = 0, col = "red")
shapiro.test(residuals)
sd_residuals <- sd(residuals)
library(pls)
predictors <- c("hardiness", "fortitude", "dexterity", "endurance", "intellect", "cleverness", "dependability", "courage", "fierceness", "power")
formula <- as.formula(paste("health ~", paste(predictors, collapse = " + ")))
pls_result <- plsr(formula, data = combined_data, scale = TRUE, validation = "CV")
# Summarize and plot PLSR results
summary(pls_result)
plot(pls_result)
loadings(pls_result)
filtered_data <- combined_data %>%
filter(abs(hardiness - fortitude) > 200)
cor_health_hardiness <- cor(filtered_data$health, filtered_data$hardiness, use = "complete.obs")
cor_health_fortitude <- cor(filtered_data$health, filtered_data$fortitude, use = "complete.obs")
print(cor_health_hardiness)
print(cor_health_fortitude)
model_filtered <- lm(health ~ hardiness + fortitude, data = filtered_data)
summary(model_filtered)
